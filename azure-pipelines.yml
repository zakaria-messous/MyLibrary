trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  JAVA_HOME: '/usr/lib/jvm/java-17-openjdk-amd64'
  NODE_VERSION: '16.x'

steps:
# Étape 1 : Configurer Java
- task: UseJava@1
  inputs:
    version: '17'
  displayName: 'Set up Java 17'

# Étape 2 : Construire le backend (Spring Boot)
- script: |
    echo "Building Spring Boot backend"
    mvn clean package
  displayName: 'Build backend with Maven'

# Étape 3 : Tester le backend
- script: |
    echo "Running tests for Spring Boot backend"
    mvn test
  displayName: 'Run backend unit tests'

# Étape 4 : Préparer les artefacts du backend
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(System.DefaultWorkingDirectory)/target'
    contents: '**/*.jar'
    targetFolder: '$(Build.ArtifactStagingDirectory)/backend'
  displayName: 'Prepare backend artifacts'

# Étape 5 : Configurer Node.js pour le frontend
- task: NodeTool@0
  inputs:
    versionSpec: '$(NODE_VERSION)'
  displayName: 'Set up Node.js $(NODE_VERSION)'

# Étape 6 : Installer les dépendances Angular
- script: |
    echo "Installing Angular dependencies"
    cd frontend
    npm install
  displayName: 'Install frontend dependencies'

# Étape 7 : Construire le frontend Angular
- script: |
    echo "Building Angular frontend"
    npm run build -- --prod
  displayName: 'Build frontend'

# Étape 8 : Préparer les artefacts du frontend
- task: CopyFiles@2
  inputs:
    sourceFolder: 'frontend/dist'
    contents: '**/*'
    targetFolder: '$(Build.ArtifactStagingDirectory)/frontend'
  displayName: 'Prepare frontend artifacts'

# Étape 9 : Publier les artefacts pour les étapes suivantes
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
  displayName: 'Publish Build Artifacts'

# Étape 10 : Déployer le backend sur Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: '<Votre-Subscription>'
    appName: '<Nom-De-L-AppService-Backend>'
    package: '$(Build.ArtifactStagingDirectory)/backend/*.jar'
  displayName: 'Deploy backend to Azure App Service'

# Étape 11 : Déployer le frontend sur Azure Blob Storage ou App Service
- task: AzureBlobUpload@1
  inputs:
    azureSubscription: '<Votre-Subscription>'
    storageAccountName: '<Nom-De-L-StorageAccount>'
    containerName: '$web'
    source: '$(Build.ArtifactStagingDirectory)/frontend'
  displayName: 'Deploy frontend to Azure Blob Storage'
